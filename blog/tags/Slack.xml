<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Clarabridge Engage Dev Blog]]></title>
    <link href="/blog/tags/Slack.xml" rel="self"/>
    <link href="/"/>
    <updated>2020-10-23T07:51:56+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Some Pairing and Mobbing takeaways]]></title>
            <link href="/blog/2019/10/29/some-pairing-and-mobbing-take-aways"/>
            <updated>2019-10-29T13:30:00+00:00</updated>
            <id>/blog/2019/10/29/some-pairing-and-mobbing-take-aways</id>
            <content type="html"><![CDATA[<p>As you could already read in <a href="/blog/2018/12/07/one-month-of-pairing">one of our previous posts</a>, we started working in pairs some time ago. Now there's also some Mob Programming being done from time to time, and we started automatically doing some things to make our own lives easier. Some examples:</p>

<h2 id="%F0%9F%9B%8B-%F0%9F%93%BA-make-yourself-comfortable">üõã üì∫ Make yourself comfortable</h2>

<p><img src="/images/2019-11-29-some-pairing-and-mobbing-take-aways/mobbing-team.jpg" alt="Keyboard Switcher in macOS" /></p>

<p>Make sure everyone has a good chair and good visibility of the screen you're working on. If you're pairing, this means that you should work on an external screen of some kind, instead of on a laptop. Make sure there's enough light, not too much noise, and that everyone has drinks and food if they need it.</p>

<p>You can work best if you're not focussing on something else. Taking away small distractions like restlessness or poor visibility of the screen can do wonders!</p>

<h2 id="%E2%8C%A8%EF%B8%8F%F0%9F%92%BB-set-your-machine-up-for-everyone">‚å®Ô∏èüíª Set your machine up for everyone</h2>

<p>Make sure the machine you're working on is set up so that you can switch drivers often and so that every driver is working comfortably on it. Of course, it's mostly impossible to all agree on the same set of shortcuts and keyboard setups, but we found a great compromise:</p>

<p><img src="/images/2019-11-29-some-pairing-and-mobbing-take-aways/keyboard-switcher.png" alt="Keyboard Switcher in macOS" /></p>

<ul>
<li>On macOS you can make the keyboard settings available from the top bar so that you can really quickly switch keyboard layouts</li>
<li>In PhpStorm or other editors, there are options to export your settings and import other ones. I just created a backup of my settings by exporting them and I ask everyone at the beginning of the session to send me their configs. When they start, they can select their own config from my desktop! After the session I can easily restore my own settings.</li>
<li>On macOS it's also possible to connect multiple Bluetooth keyboards, mice, etc. We have an AZERTY and a QUERTY keyboard available, as well as a trackpad and a mouse. They are easily passed on and ready to use by the next driver!</li>
</ul>

<p>These three small changes come a long way to make you feel as if you're working on your own machine!</p>

<h2 id="%E2%9B%94%EF%B8%8F%F0%9F%93%B1-only-allow-one-screen">‚õîÔ∏èüì± Only allow one screen</h2>

<p>Being distracted already came up in the previous tip, but here we go again! Ask everyone in the room to put their phones on silent and put them in their pockets. Ask them to close their laptops, they're not going to need them. If you need to look something up, or if you're unsure about what a given piece of code does, ask the driver to put it on the big screen.</p>

<p>This way, nobody dives off into their own cocoon and let their minds escape the group's focus.</p>

<h2 id="%F0%9F%8E%A8%E2%97%BB%EF%B8%8F--to-the-drawing-board">üé®‚óªÔ∏è  To the drawing board</h2>

<p>Try to find a way to make things visible. If you have a whiteboard available, great! Do you have a wall? Use stickies or put up big pieces of paper. As a last resort, there's still just pieces of paper that you can draw on. Just make sure that you can make something visible so that you have something to talk about when a discussion is in order.</p>

<h2 id="%F0%9F%98%B0-%E2%9E%A1-%F0%9F%98%81-keeping-everyone-engaged">üò∞ ‚û° üòÅ Keeping everyone engaged</h2>

<p>Two rules:</p>

<ul>
<li>Switch drivers often</li>
<li>Take breaks often</li>
</ul>

<p>We use <a href="http://mobster.cc/">this simple app</a> to notify us when to switch and when to take breaks. If the app doesn't tell you to take a break but you feel like it anyway, just do it. You'll be more productive after the break.</p>

<h2 id="%F0%9F%92%BB%F0%9F%8F%A1-remote-work-and-mobbing">üíªüè° Remote work and mobbing</h2>

<ul>
<li>Make sure both parties have a perfect internet connection</li>
<li>Make sure the setup for audio is working properly. We use a Jabra kit that picks up less ambient noise and makes everything clear to understand</li>
<li>Use e.g. Slack screen sharing features to your advantage: you can draw on the screen and you can switch drivers easily!</li>
</ul>

<p>Hope these takeaways can help you as well! Happy Mobbing!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Experiment: Pair Programming By Default]]></title>
            <link href="/blog/2018/12/07/one-month-of-pairing"/>
            <updated>2018-12-07T16:00:00+00:00</updated>
            <id>/blog/2018/12/07/one-month-of-pairing</id>
            <content type="html"><![CDATA[<p>As you could already read in some of our <a href="/blog/2017/05/22/implementing-little-big-details-on-offsite-bootcamp">previous</a> <a href="/blog/2017/03/01/batman-chatman">blogposts</a>, we are a relatively small team, with some loose rules for working together. Up until one month ago, everyone just picked a project from the roadmap and started implementing, and there was a rotation system within the team to always have two people available to help out our support team to assess bugs &amp; fix issues respectively.</p>

<h2 id="%F0%9F%92%AD%F0%9F%98%B0-about-silos-%26-issue-fatigue">üí≠üò∞ About Silos &amp; Issue-Fatigue</h2>

<p>As you can imagine, this works really well for projects that are small and well defined, and for teams where everyone is of the same skill level, and has the same development practices. People are not in each other's ways, and you can "horizontally scale" your team. The only trouble is, we're a small team, we have senior and junior developer profiles, and our projects are mostly not so small. The result of this, is that the person implementing a feature is most likely the only one that <strong>really</strong> knows the feature inside out. So the <a href="https://en.wikipedia.org/wiki/Bus_factor">bus factor</a> for every feature was basically 1. For some features we had insane knowledge silos.</p>

<p>There's a similar story to the support rotation system within the team: the people talking to support and fixing bugs most likely didn't implement the features where the bugs appeared. If they did, the bugs were quickly fixed, and if not, people had to try and understand code written by someone else that they'd never seen <strong>over and over</strong> again. Not ideal. And the result was that for me personally, weeks when I was Batman (yes that's how we call the lucky engineer that's solving bugs that week) were the most draining periods of the year.</p>

<h2 id="%E2%9A%97%EF%B8%8F%F0%9F%94%AC-the-experiment">‚öóÔ∏èüî¨ The Experiment</h2>

<p>We do weekly roundups, and after an exhausting week of being Batman, I, expressed my feelings towards the Silos and the Batman weeks. The whole team actually agreed that the situation was not perfect, and we decided it was time for an experiment:</p>

<ul>
<li>Split up the (already small) team in two groups of people (3 to 4 people per group) that will always try to work together on the same feature.</li>
<li>Start every day together with your team (at the same computer or over <a href="https://get.slack.help/hc/en-us/articles/216771908-Make-calls-in-Slack">Slack Voice Calls</a>) trying to solve issues or create features using Pair Programming techniques. Split up the team for "monkey-jobs".</li>
<li>Both teams provide one team member per week to be Batman or Robin. They form their own team and tackle bugs together.</li>
</ul>

<p>We limited the scope of the experiment to the winter release, so 3 months. So far we did a (very limited) retrospective every week.</p>

<h2 id="%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB%F0%9F%91%A8%E2%80%8D%F0%9F%92%BB-what-have-we-learned-so-far%3F">üë©‚Äçüíªüë®‚Äçüíª What have we learned so far?</h2>

<p>We've only been doing this for 4 weeks, so I might be jumping to conclusions here. So far the experience has been positive!</p>

<ul>
<li>It's great to be able to verify your ideas immediately, and to try and build a shared understanding of the problem you're working on.</li>
<li>Pair Programming is exhausting, but it works! We feel the velocity gain and the concentration boost. We find that we're writing better code. We feel productive.</li>
<li>We're aware that it's exhausting and we take a lot of breaks, stop early when we're tired.</li>
<li>We're using Slack as team communication tool, and when someone is working at home, we can just keep Pair Programming because of the built-in voice calls and screen sharing. Slack even allows you to share your mouse and keyboard with the person at the other side of the call (that is, if you've installed Slack from their website instead of from the App Store).</li>
<li>We found this great blogpost with some basics to <a href="https://madewithlove.be/how-to-keep-pair-programming-digestible/">keep Pair Programming digestible</a>, by my friend <a href="https://twitter.com/woutersioen">Wouter Sioen</a>.</li>
<li>We've done some ad-hoc pair programming in the past, but starting the day at the same computer really helps you keep it up and encourages you to do it more often.</li>
<li>Batman and Robin are <em>way faster</em> at finding and fixing bugs than when they were working alone. Having that extra developer by your side improves your bug finding experience massively. When working alone, overlooking a small mistake could take up hours, while your pair could spot that in seconds. Our CTO <a href="https://twitter.com/oemebamo">Jurriaan Persyn</a> pointed out that we've fixed a third more issues than last month, even some that were open for a long time already!</li>
</ul>

<h2 id="%F0%9F%93%9A%F0%9F%A7%90-some-resources">üìöüßê Some resources</h2>

<ul>
<li><a href="https://tuple.app/pair-programming-guide/">Tuple's Pair Programming Guide with lots of good tips!</a></li>
<li><a href="http://www.davefarley.net/?p=267">Blog: Pair Programming For Introverts</a></li>
<li><a href="https://madewithlove.be/how-to-keep-pair-programming-digestible/">Blog: How To Keep Pair Programming Digestible</a></li>
<li><a href="https://www.martinfowler.com/bliki/PairProgrammingMisconceptions.html">Blog: Martin Fowler on Pair Programming Misconceptions</a></li>
<li><a href="http://wiki.c2.com/?ExtremeProgramming">WikiWikiWeb on Extreme Programming</a></li>
<li><a href="https://twitter.com/MrAlanCooper/status/1060558122916278272">Great twitter thread by @MrAlanCooper about Pair Programming</a></li>
<li><a href="https://twitter.com/mathiasverraes/status/1063063502254936065">Mathias Verraes talking about Pair Programming for quality</a></li>
</ul>

<p>We hope we can keep it up! ü§û</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Tips For Distraction-Free Programming]]></title>
            <link href="/blog/2018/04/09/some-tips-for-distraction-free-programming"/>
            <updated>2018-04-09T17:00:00+00:00</updated>
            <id>/blog/2018/04/09/some-tips-for-distraction-free-programming</id>
            <content type="html"><![CDATA[<p>I'm very easily distracted. The slightest movement or conversation in the room takes my focus right away, not to mention the endless stream of information and notifications that e.g. services like Slack (team chat) and e-mail generate. I might be working on something with a colleague or on my own, when a simple notification pops in. My brain glitches for a moment while I process the notification and get back to where I was, but it's enough to completely lose focus. When pair programming with someone that isn't easily distracted, it's mostly fixed in an instant by getting back to the conversation or repeating the last question, but it's a lot more difficult when working on a feature alone. Over time I tried to change a few things to make this kind of interruptions less frequent or pervasive. Let's check some out:</p>

<h2 id="%F0%9F%8F%9D-environment">üèù Environment</h2>

<p>The room I'm working in has a huge impact on my concentration levels. People talking or walking around are direct hits, as is any movement in my surroundings, even behind me. This is mostly fixed in our case since we don't have an open floor plan, so we don't share rooms with other teams, and when it's noisy in the room next to ours, we can just close the door. To prevent people talking from disrupting my concentration and the other way around, I'll put on headphones when working alone (mostly to prevent myself from listening in on the conversation), and I'll move to another room when pair programming. I know it sounds antisocial and makes me less approachable for questions or consultation, but I try to only do this when there's noise.</p>

<h2 id="%F0%9F%93%B1-phone-%26-social-media">üì± Phone &amp; Social Media</h2>

<p>My phone is out of sight. When I get a message I will read it when I find the time. When someone calls me I mostly take the call. It might sound strange because we're a social media company, but I'm not logged in to any of my personal social media accounts during the day. This really helps me concentrate, because my Twitter timeline is a real timesink for me. If I'm looking at that, I'm certainly not concentrating üòè. For testing stuff, I'll aways use test accounts.</p>

<h2 id="%F0%9F%96%A5-full-screen-applications">üñ• Full Screen Applications</h2>

<p>Although I don't like Full Screen Applications, I started using them more and more. They hide anything that might be happening in other windows, covering unwanted distractions up until you switch to the other application. I still don't like the oversight that is taken away by using an app in Full Screen mode though. The cool thing for me specifically is that iTerm behaves a bit like a tiling window manager for me, since I do most of my development in Vim &amp; the terminal, using iTerm splits. A great tip there is that you can use <code>Cmd + Shift + Enter</code> in an iTerm split to make it appear Full Screen temporarily.</p>

<h2 id="%F0%9F%9B%8E-osx-notification-center">üõé OSX Notification center</h2>

<p><img src="/images/2018-04-09-some-tips-for-distraction-free-programming/1.png" alt="do not disturb" /></p>

<p>I already hinted at it earlier on, but notifications of any kind really disturb me. They pop over any fullscreen application that might be open, and I really can't help looking at them. This is why I set the <code>DO NOT DISTURB</code> mode on during workdays. You can configure Mac OSX to enable it by default during work hours, or you can do it manually when you notice being distracted. Notifications I get are mostly from Slack, Calendar and Mail. You can also configure this on a per-application basis in your System Preferences.</p>

<h2 id="%F0%9F%8E%88-osx-application-badges">üéà OSX Application Badges</h2>

<p><img src="/images/2018-04-09-some-tips-for-distraction-free-programming/2.png" alt="dock icons with badges" /></p>

<p>What's really annoying me is that Mac OS displays so-called "badges" -the red circle icons with a number in them- on applications that received notifications, and these badges are visible in the Dock and the Application Switcher (<code>Cmd + Tab</code>). When I'm switching to my browser, I don't want to see how many Slack messages I missed. I'll check those later. I just went to Notification Center in System Preferences and disabled these badges for Slack, Calendar and Mail. I believe that I can be more productive when I read these things periodically instead of during other tasks. In the screenshot above, I enabled them temporarily for Calendar to show you what I mean, but what you can't see is that I have 25+ unread messages in Slack. Don't worry, I'll read them after I get this blogpost out! üòâ</p>

<h2 id="%F0%9F%93%A2-slack">üì¢ Slack</h2>

<p>Some great things to do in Slack are to Leave channels you don't use, and to use the Mute üîá functionality on channels that are not urgent but you can't really leave. Of course, I disabled Slack's notification sounds by default.</p>

<p>I hope these tips were helpful, they certainly help me concentrate a bit better. If you think of anything else, comment below, I want to hear it! Happy pair programming!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Emoji as conversation enhancement]]></title>
            <link href="/blog/2017/04/06/emoji-conversations"/>
            <updated>2017-04-06T16:15:00+00:00</updated>
            <id>/blog/2017/04/06/emoji-conversations</id>
            <content type="html"><![CDATA[<p>At Clarabrige Engage, we use emoji extensively. üí∞üí≠ We believe they are an enrichment of ongoing conversations, and can be used to express things that can't be expressed in a textual representation. Let's see how and where we use them üëå</p>

<h2 id="slack">Slack</h2>

<p>Our main communication form is chat. We use Slack and we just love the integration of emoji in their application! They're everywhere! üòª</p>

<p><img src="/images/2017-04-06-emoji-conversations/1.png" alt="emoji in between text in slack" /></p>

<p>Also, the "reactions" are quite handy to not mess up conversation flow with emoji only.</p>

<p><img src="/images/2017-04-06-emoji-conversations/2.png" alt="emoji reactions in slack" /></p>

<p>In full conversation, it looks a bit like this:</p>

<p><img src="/images/2017-04-06-emoji-conversations/3.png" alt="mixture of reactions in slack" /></p>

<h2 id="github">GitHub</h2>

<p>Of course, our conversations in Issues and Pull Requests on github resemble those on Slack...</p>

<p><img src="/images/2017-04-06-emoji-conversations/4.png" alt="github reviews with emoji" /></p>

<p>And in our commits, we use the <a href="http://gitmoji.carloscuesta.me/">gitmoji</a> way of prefixing commit messages with one or more semi-standardized emoji, to make it <strong>much clearer</strong> what the commit is about.</p>

<p><img src="/images/2017-04-06-emoji-conversations/5.png" alt="gitmoji in commit messages" /></p>

<h2 id="emoji-news">Emoji-news</h2>

<p>To top it off, there's a dedicated channel on our company chat for <strong>emoji-only</strong> conversation. It's called <code>#emoji-news</code>.</p>

<p><img src="/images/2017-04-06-emoji-conversations/6.png" alt="emoji news, conversations with emoji only" /></p>

<p>The great thing about all this, is that emoji really have positive vibes about them, and they work in an inspiring, encouraging way in conversations. They make you laugh, or they express a feeling that could be very difficult to express in text only. They provide context to what was said. They can be combined to create whole stories in just a few images. They work cross-language. They can be abused. It's just fantastic üòè. We are so into it, that we added 100's of our own custom emoji to slack, which in turn add much more specific things that we could express (you can find some of them in the screenshots above). If you're looking for custom emoji, <a href="http://slackmojis.com">Slackmojis</a> is a great place to start looking.</p>

<p><img src="/images/2017-04-06-emoji-conversations/7.png" alt="a small part of our custom emoji on slack" /></p>

<p>Do you use emoji differently? Do you have tips for us? Let us know üìØ</p>

<p>Have a great day! ‚òïÔ∏è</p>
]]></content>
        </entry>
    </feed>