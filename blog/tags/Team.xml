<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Clarabridge Engage Dev Blog]]></title>
    <link href="/blog/tags/Team.xml" rel="self"/>
    <link href="/"/>
    <updated>2020-10-23T07:50:35+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[How to get the most out of a discussion?]]></title>
            <link href="/blog/2020/10/23/how-to-get-the-most-out-of-a-discussion"/>
            <updated>2020-10-23T10:00:00+00:00</updated>
            <id>/blog/2020/10/23/how-to-get-the-most-out-of-a-discussion</id>
            <content type="html"><![CDATA[<p>In our team, we have discussions all the time. It's a very useful way to get everyone on the same page, or to make decisions that will stick for some time. Here are some strategies that I use to get more out of a discussion.</p>

<h2 id="%E2%9A%BD%EF%B8%8F-%F0%9F%A5%85-state-your-goals">⚽️ 🥅 State your goals</h2>

<p>In my experience, the most effective discussions are those that happen because everybody knows why they're there. They know the goal of the discussion before they start thinking and talking. They have a big picture overview. <strong>So, when starting a discussion always try to make clear what the problem is, and what the goal is that you want to achieve.</strong> This avoids people derailing the conversation on accident because they don't know what you want to achieve. Some examples:</p>

<blockquote>
  <p>I'd like to discuss the ContentFormatter. We don't think it will stand the test of time.</p>
</blockquote>

<p>Okay. Let's assume "the ContentFormatter" is a well-known concept. The discussion can still go all directions. People might start taking out all frustrations they have about this piece of code. This might result in a huge refactor that's not needed. It's not clear what we're trying to achieve with this discussion. Let's try again:</p>

<blockquote>
  <p>I'd like to talk about the problem we noticed in the ContentFormatter. Every service we support implements their own way of formatting images. I would like to see if we should have a general system for formatting images, or if there is another way of dealing with this so we don't get into problems during the upcoming Project X that will completely change how images are handled in the ContentFormatter.</p>
</blockquote>

<h2 id="%F0%9F%95%B5%EF%B8%8F%E2%80%8D%E2%99%82%EF%B8%8F-%F0%9F%93%9A-be-prepared">🕵️‍♂️ 📚 Be prepared</h2>

<p>If you know up front that a discussion is going to take place, it's always useful to prepare yourself a bit. You don't have to know everything. Not everyone taking part will know all details, and the more people know about something, the easier it is to get on the same page. <strong>It's harder to come to useful conclusions when nobody knows the details of the problem.</strong></p>

<blockquote>
  <p>We're thinking about replacing our generator for unique ids because of problems discussed earlier. Does anyone know any good alternatives?</p>
</blockquote>

<p>From the get-go, the chances of ending this discussion with a productive solution and within a limited timeframe are low. Nobody is prepared, maybe some people know about all options, but they probably don't know the details from the top of their head. If a decision is made chances are that we missed some crucial information. It might be good to postpone the decision and look up some more information first.</p>

<blockquote>
  <p>We're thinking about replacing our generator for unique ids because of problems discussed earlier. I did some research and found out there are several options: option a with pros and cons x, option b with pros and cons y and option c with pros and cons z. How do we find out what the best solution is?</p>
</blockquote>

<p>In this example there's something to work with. People can consider options because someone listed the pros and cons for them. They can talk about which strategy is best to evaluate options. Even though they might need more info, the chances of making a good decision on the spot are higher.</p>

<h2 id="%F0%9F%91%A9%E2%80%8D%F0%9F%8F%AB-%F0%9F%93%88-visualize-the-problem">👩‍🏫 📈 Visualize the problem</h2>

<p>There's multiple reasons why this is a crucial tactic:</p>

<ul>
<li>When in a conversation, it often happens that people are talking to each other and they think they agree about a given problem. All parties think they understand. However, <em>the moment you make a visualization (drawing, Miro board, etc...) the discussion intensifies because people don't agree on some details of the drawing</em>. At that point, you found a part of the problem to focus on more.</li>
<li>A discussion with just audio is hard to stay concentrated on. <em>People can concentrate much better if they have something relevant to look at</em>. Even seeing the face of the person they're talking to (yes, we're working remotely...) can already help a lot. Now imagine the thing you're looking at also helps you understand the problem at hand! 🤯</li>
<li><em>Just drawing something might sometimes already make a problem glaringly obvious.</em> You have a bottleneck somewhere but don't know where? Draw some dependency lines between involved components and see which component has the most. There are countless problems that become really obvious when you make them visual like this.</li>
</ul>

<h2 id="%F0%9F%98%AD-%F0%9F%8D%B0-split-problem-and-solution">😭 🍰 Split Problem and Solution</h2>

<p>As I said before, you will come to a better conclusion if the problem at hand is well understood. Therefore, it's important that the problem is discussed, and that all people involved know what they're talking about. In many discussions, people start talking about the solution right away, but forget to define what it actually solves. This is confusing, but also takes away learning opportunities for people who don't know about the problem yet, and it takes away opportunities to get a shared mental model of the problem first. <strong>Try to make it very clear that you're trying to find out more about the problem first, and that talking about the solution will be step two.</strong></p>

<h2 id="%F0%9F%8C%90-%F0%9F%A7%A0-abuse-cunningham%27s-law">🌐 🧠 Abuse Cunningham's Law</h2>

<p><a href="https://meta.wikimedia.org/wiki/Cunningham%27s_Law">Cunningham's Law</a> states:</p>

<blockquote>
  <p>The best way to get the right answer on the internet is not to ask a question; it's to post the wrong answer.</p>
</blockquote>

<p>You can use this to your advantage if you don't know what the right solution to something is. <strong>Just propose a solution that you know will be wrong.</strong> This often triggers people with other ideas to bring them up, and thus proposing a good solution. It's definitely a good strategy when trying to get to a shared understanding of a problem as well: draw something that's obviously wrong, and let other people correct you. I think this is why e.g. whiteboarding in a group, and <a href="https://www.eventstorming.com/">Event Storming</a> work so well.</p>

<h2 id="%F0%9F%91%B9-%F0%9F%91%A9%E2%80%8D%E2%9A%96%EF%B8%8F--be-the-devil%27s-advocate">👹 👩‍⚖️  Be the Devil's Advocate</h2>

<p>Similar to how you might use Cunningham's Law to your advantage, you can also try to play devil's advocate in discussions. It's sometimes very hard for people to express <strong>why</strong> they think a given solution is better than another one. That's where this tactic comes into play.</p>

<blockquote>
  <p>👨‍💻: Let's use Library A, I've often used it in the past and it's just what we need.</p>
  
  <p>👹: Why, Library B is well-known too and it does the same things as Library A.</p>
  
  <p>👨‍💻: Yes that's true, but there's a bigger user base for Library A, and its test suite is quite extensive as well.</p>
  
  <p>👹: To me the code in Library B looks better tested and more robust...</p>
  
  <p>👨‍💻: Library A has better documentation, though, and it also allows us to do things in parallel, improving performance. The performance will be a crucial factor once we scale this feature up to all our users.</p>
  
  <p>👹 ➡️  👩‍💻: Aha! I didn't think performance would be a problem. It seems you're right about the fact that Library B will struggle on that front. Okay, so if we pick A we have better documentation and tests, a big community if we have any questions, and better performance once we scale up. That sounds great!</p>
</blockquote>

<p>As you can see in this simulated conversation, 👹 the person playing devil's advocate actually doesn't have a preference for Library B, they just don't see why the other person 👨‍💻 is so keen on using Library A. <strong>By us presenting another option, the other people are pushed a little bit to come up with good reasons why</strong> Library A is the better choice here. Like this everyone participating knows why a given decision will be made.</p>

<p>A note of caution here, playing devil's advocate can be <strong>too pushy</strong> for some people, causing them to let go of their standpoint because they don't immediately find the words to explain the why of their choice. If you notice this (be quick about it) let everyone know you're playing this devil's advocate role to find out the why, and that you're not trying to convince them of your own standpoint. In some groups of people, you can just do it up front:</p>

<blockquote>
  <p>👩‍💻 ➡️  👹: I'm going to play devil's advocate for a second... Why aren't we picking library B?</p>
</blockquote>

<h2 id="%F0%9F%91%A5-%F0%9F%92%AC-practice-paraphrasing">👥 💬 Practice Paraphrasing</h2>

<p>A very commonly cited strategy for better understanding what someone means is to paraphrase what they said, even if you think you understood correctly.</p>

<blockquote>
  <p>👱‍♀️ : I think we'll have to shut down our data collection systems for that upgrade</p>
  
  <p>🧔: Do you mean that to be able to do the Elasticsearch upgrade, we'll have to stop fetching Facebook data?</p>
  
  <p>👱‍♀️ : I was talking about the MySQL upgrade. The Elasticsearch upgrade is planned for next week.</p>
  
  <p>🧔: Okay, I forgot about that. So to upgrade MySQL we'll stop fetching Facebook data?</p>
  
  <p>👱‍♀️ : Yes, in fact, we only have to stop processing the webhooks queue for Twitter and Facebook. We can keep receiving them and they'll just be waiting to be processed later.</p>
</blockquote>

<p><strong>By simply paraphrasing what was said, we resolved two or three misunderstandings.</strong> The power of this is immense, but it's sometimes hard to do. You'll need to be a very active listener, and try to put your assumptions on the side. Also, obviously, you'll have to speak up if you're not sure about something that was said.</p>

<p>That said, I see similarities between paraphrasing, Cunningham's Law, and the "making things visual" strategies. They all try to achieve the common goal of having a better shared understanding of something.</p>

<h2 id="%E2%8F%B1--%F0%9F%92%AC-postpone-decisions">⏱  💬 Postpone decisions</h2>

<p>I said it earlier, but this is a very valuable tactic in many situations. Even during programming, you can use this so that you can think about one problem at a time. You build something, and instead of worrying about e.g. the storage mechanism you're going to use, you program against an interface. That way, you can later decide how to implement the storage interface when you know more.</p>

<p>The same thing is true in discussions. If you want to decide on something, you can make assumptions, document them, and make the decision based on that. <strong>You can verify your assumptions later and reevaluate where needed.</strong> What you can also do is to "decide" that you need more background information to make an actual decision, and plan a follow-up discussion after everyone has had the time to look things up.</p>

<p>This is something I learnt when I was studying to become a teacher. Nobody expects you to know everything, so you can just admit that you need to look things up and then postpone the decision. This will highly likely lead to more sound decisions than making them on the spot without having enough information available.</p>

<h2 id="%F0%9F%99%8A-%F0%9F%A4%AB-activate-silent-people">🙊 🤫 Activate silent people</h2>

<p>Meetings often end up in a few people talking, and other people silently following along. In theory this is no problem for the actual discussion, but <strong>in practice, I find that the silent people often do have an opinion and just aren't vocalizing it.</strong> It might be because they're not feeling safe, they're not experts in the thing that's discussed or that they just don't think their "crazy" opinion is worth exploring. I do think that all people need to be heard. To help them, you can ask everybody for their opinion explicitly.</p>

<blockquote>
  <p>🧔: Do you agree that using Library A would be better than Library B, Tania 👩?</p>
  
  <p>👩: I think the performance impact is indeed the crucial factor in this decision, so yes</p>
  
  <p>🧔: What about you, George 👨‍🦰? You're frowning, is there something we forgot?</p>
</blockquote>

<p>If Tania 👩 and George 👨‍🦰 were silent for some time, you could try to involve them like this. Most of the time this works, and if you do this often, people will start to participate more without help, because they know their opinion is valued.</p>

<p>Another word of caution here: just like "playing the devil's advocate", this might be a bit pushy for some people, and they'll feel like they're put on the spot. In any discussion it's beneficial to have a safe environment where people aren't <em>punished</em> for what they say. When it's okay to change your opinion, make mistakes, and try things, we'll come to much better conclusions in the end.</p>

<h2 id="%F0%9F%97%A3-%F0%9F%93%9D-document-what-was-said">🗣 📝 Document what was said</h2>

<p>When the discussion is over, try to document what was said. It doesn't need to be word-for-word texts, but just something to look back on 2 weeks later and remember what was said, if decisions were made, and why they were made like this. There are multiple ways of doing this, but one of the most interesting things is <a href="https://github.com/joelparkerhenderson/architecture_decision_record">ADRs</a>. If that's too formal for you, don't worry. Anything will do really. Just write something down to look back on. By the way, this is another opportunity to get feedback by paraphrasing!</p>

<h2 id="%F0%9F%96%96-%F0%9F%99%87%E2%80%8D%E2%99%82%EF%B8%8F-outro">🖖 🙇‍♂️ Outro</h2>

<p>That's it for this post, thanks for reading all the way through to the end! I'm definitely not an expert in leading conversations and I have my flaws (some of them have remedies listed in this post). All of us have a lot to learn, and hopefully these strategies help you to get the most out of your discussions! See you in the next post! 👋</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[How I Hacked My Future Through Clarabridge]]></title>
            <link href="/blog/2019/09/02/how-i-hacked-my-future-through-clarabridge"/>
            <updated>2019-09-02T11:00:00+00:00</updated>
            <id>/blog/2019/09/02/how-i-hacked-my-future-through-clarabridge</id>
            <content type="html"><![CDATA[<p>A few months ago, Mohammed joined our Clarabridge Engage development team for an internship and he has since then become one of our full team members. This blog post is about his story and how <a href="https://hackyourfuture.be/">HackYourFuture.be</a> helped him find a place in our company, the technology industry of Gent, and ultimately Belgium.</p>

<blockquote>
  <p>“Three years ago I decided to leave my homeland, after an exhausting period of war, destruction and loss. I left my family hoping to improve my future and achieve my ambition. 
  Belgium was my destination and by now I’m pretty sure that it was the right choice. When I got the Belgian residence I started to search for a job based on my resume in Palestine. I had graduated from the 'Information and Technology department' in Gaza, but I knew that I needed more experience and knowledge if I wanted to make it work here.” - Mohammed</p>
</blockquote>

<h2 id="my-experience-at-hackyourfuture">My Experience at HackYourFuture</h2>

<p>In his search for more education and building more experience, Mohammed was helped by the <a href="https://www.vdab.be/">VDAB</a>, Flanders’ public employment service. They suggested he attend the HackYourFuture course.
HackYourFuture was founded in 2015 in Amsterdam, with the aim to enable refugees to build digital skills for a career in web development, facilitate the integration of newcomers, and address the shortage of qualified workforce in the IT sector, a shortage reflected by the amount of open positions we have here at <a href="http://clarabridge.com/careers">Clarabridge</a>.<br />
In May 2018, HackYourFuture Belgium launched its first class in Belgium with 13 highly motivated students, Mohammed being one of them.</p>

<p>Mohammed recalls the course was a perfect match for him for several reasons:</p>

<blockquote>
  <p>“The course covered programming languages with interesting modules (CSS, HTML, JavaScript, Node.js, React).  Each of the modules are taught by volunteer coaches with experience in the field of programming.“<br />
  “Because the courses were given on Sundays, it allowed me extra spare time to continue my Dutch lessons and driving lessons. And although I’m learning Dutch, the fact that the lessons were taught in English helped me too.”</p>
</blockquote>

<p><center>
<img src="/images/2019-09-02-how-i-hacked-my-future-through-clarabridge/first-class.jpeg" alt="The first class of HackYourFuture Belgium" /><br />
<em>The first class of HackYourFuture Belgium</em>
</center></p>

<p>During 6 months the students followed these lessons and for the last 9 weeks they worked on a project together in smaller groups.</p>

<blockquote>
  <p>“The coaches of HackYourFuture were as excited as we were, because for most of them it was their first time teaching. During the week, when we studied and worked on our assignments, they were always available through Slack to answer our questions.</p>
</blockquote>

<p>When asked about what makes the HackYourFuture bootcamp stand out from following any of the online courses plentifully available through the internet, Mohammed points to the team aspect:</p>

<blockquote>
  <p>“By the final project we worked in groups of three, and every Sunday we divided the work between us. During the week we also kept in touch, and often we could use the HackYourFuture offices to work on the project.”</p>
</blockquote>

<p>Mohammed’s project involved making a website for an institution from Brussels that would help homeless people and refugees to find the right information and help more easily. At the end of the course each team presented that project. At this graduation event one of our Clarabridge team members was also present.<br />
Of course, for the students, it now became real. Mohammed: “We were worried about the next step, which would either be an internship or a job.” HackYourFuture assigned each student a mentor that would help the student take that next step.</p>

<p><center>
<img src="/images/2019-09-02-how-i-hacked-my-future-through-clarabridge/mohammed-graduation.jpeg" alt="Mohammed at the graduation" /><br />
<em>Mohammed at the graduation</em>
</center></p>

<h2 id="starting-the-internship-at-clarabridge">Starting the internship at Clarabridge</h2>

<p>This was the time when our company came into view for Mohammed. After having seen the projects at the HackYourFuture graduation event, we were impressed how far they got in only 9 weeks. We invited Mohammed for an interview, and his dedication immediately struck us. He explained what he was able to build, and what he learned at the HackYourFuture course, and this for us was the main deciding factor for offering an internship.</p>

<blockquote>
  <p>“I was lucky to get a four month internship at <a href="https://www.clarabridge.com">Clarabridge</a> in Ghent, Belgium. I have learned new things every day, being surrounded by experienced and talented developers and engineers who are very helpful and very patient. They didn’t seem to get bored of my hundreds of questions.”</p>
</blockquote>

<p>When an intern joins our team, we first of all look for the right project to work on. The ideal project is typically a stand-alone new feature (so the scope of it is clearly defined), challenging enough (from a technical and product perspective), should have as less external factors as possible (so there’s as little roadblocks as possible), involves enough existing components of the codebase (to evaluate how easy a person finds their way), and most importantly: a project that results in something that we can take into production and is visual to our clients and team. Having that success experience of having your code shipped into production is something we always strive for.</p>

<p>Mohammed started his work on an importer-system that would allow our customers to upload an Excel file with a list of account related settings. The feature would mean a huge time-saver for customers who want to configure several canned responses, tags, or saved filters at once.<br />
Mohammed was assigned a specific mentor in our team as well (who helped on an almost daily basis), but the whole team got involved in reviewing parts of Mohammed’s code.</p>

<p><center>
<img src="/images/2019-09-02-how-i-hacked-my-future-through-clarabridge/pull-request.png" alt="Mohammed’s first major Pull Request" /><br />
<em>Mohammed’s first major Pull Request</em>
</center></p>

<h2 id="what-i-learned">What I learned</h2>

<p>Four months later, when this and several other projects of Mohammed's have been taken into production, we asked Mohammed what some of his main takeaways since his start in our team are:</p>

<ul>
<li><p>🏠 “When I started at Clarabridge, my main worry was that I had never written a line of PHP code in my life. I was wondering how I’d be able to get the hang of a complete language in only a couple of months. But actually, I quickly realised that learning PHP was the least of my concerns. Instead, my mentor and I focused a lot on how to write code using the principles of S.O.L.I.D. I probably learned more about programming trying to structure my code this way, than learning about language syntax.”</p></li>
<li><p>✂️ “I always had to keep in mind that I was writing code for others. At some point in the future, another developer in the team will work on what I wrote, so I had to think wider and wiser, and take future uses and possibilities of my code into account. I refactored my code several times because of this.”</p></li>
<li><p>🔨 “It’s sometimes tempting to fix an issue by writing code around it, but I realised that often this just causes a new issue. I try to to take more time to solve the problem at its root.”</p></li>
<li><p>📚 “When I started my internship, I read the blog posts on this <a href="https://engagor.github.io/">Clarabridge Developers Blog</a>. Unfortunately, I had a hard time understanding some of the content. A month later, I re-read them and could already understand more. Until this day, I keep reading the posts which didn’t make sense at that time. Being part of an ambitious team who reads a lot, encouraged me to learn and read more too.”</p></li>
<li><p>👯 “It’s often a balance between trying to find the answer on your own, and avoiding to be stuck for too long, and eventually asking for help. Time is valuable.<br />
I started to trust my teammates’ opinions, and worked on giving them a reason to trust me back. I learnt to avoid saying “I can do it alone”  or “It is a piece of cake”. Instead I said “I’ll try to do it but I may need your help”. The team loves to help each other; so if you need help, just say it. When getting help from others, my teammates often had other personal perspectives. I learned to accept that, and picked from those that suited me. Eventually, by experience, you will have your own perspective.”</p></li>
<li><p>👾 “Never underestimate another programmer, even if you know that you have more experience than him; always try to listen, discuss and understand. 
During the summer holidays, a talented 18 year old student joined our team. He didn’t know a lot about our application, but in a very short period of time he implemented more than 12 small improvements to the product. The whole team was impressed by what he has done. Because the improvements he worked on were smaller, easy to understand projects, I also learned from him by reviewing and checking his Pull Requests.”</p></li>
</ul>

<p>That the most important lessons Mohammed lists are mainly about communication and how to learn from others, and the impact of that on how your code is structured, really show he’s become an integral part of our development team. It’s also a testament to the way a product is always built by a team of people (and not a single 10x engineer).
So it’s no surprise that the project Mohammed is currently helping to build is one of our most requested features.</p>

<h2 id="what-is-next%2C-and-how-can-you-help%3F">What is next, and how can you help?</h2>

<blockquote>
  <p>“For me, HackYourFuture was my starting point. I was invited to be an assistant coach in the upcoming course - now at its fourth edition already. For me this is a great opportunity to pay back some of their generosity, and of course to continue learning.” - Mohammed</p>
</blockquote>

<p>Know that HackYourFuture is run by volunteers. They are always on the lookout for people who work with challenging technologies in innovative companies. If you feel like sharing some of your knowledge with the students, maybe think about <a href="https://docs.google.com/forms/d/e/1FAIpQLSef3OH8546MJNllcvrv7KomHelqzrKNpnLRVbI1ZqbeajnluA/viewform">becoming a coach</a>?<br />
Helping as a coach can mean giving a few lessons, but also just being around when the students do their work, and trying to help out where possible.<br />
Know that HackYourFuture is not only about programming, it’s also a real <a href="https://www.facebook.com/HackYFutureBE/">community</a> supporting and helping each other to start a new career in Belgium.</p>

<p><center>
<img src="/images/2019-09-02-how-i-hacked-my-future-through-clarabridge/coaches.jpeg" alt="HackYourFuture Coaches" /><br />
<em>HackYourFuture Coaches</em>
</center></p>

<p>If you’re a company interested in hiring some of the graduates, we hope Mohammed’s story helps. We can attest that the students are trained to perform well as junior web developers in a modern IT team, write clean code, and think like problem solvers. From this experience we especially remember the student’s eagerness to learn and start a development career.</p>

<h2 id="mohammed-thanks">Mohammed thanks</h2>

<blockquote>
  <p>“Clarabridge is my home now, so one of my responsibilities is to make it bigger and keep it safe and shining.<br />
  With this post, I also want to thank everyone who helped me through my journey, by encouraging words or advice, or even a smile.<br />
  Thanks HackYourFuture and all of the coaches who showed the way for us, especially Frederik De Bleser who believed in me and kept giving me advice even after the course.<br />
  Thanks to my mentors at Clarabridge: Anthony, Toon and Cedric. And the other teammates who didn’t hesitate when I asked for help: Jenne, Gheerwijn, Thibaut, Thomas, Jared, Jasper, Hans and Erik. And thanks to Jurriaan who gave me the opportunity to be one of his team members, and for being a human before being a team leader.”</p>
</blockquote>

<h2 id="want-to-join-the-course%2C-or-do-an-internship-too%3F">Want to join the course, or do an internship too?</h2>

<p>If you feel like joining a HackYourFuture course, know they always accept applications. <em>(The 6th course is starting in a few days!)</em><br />
And of course, we also invite recent graduates or others interested in doing an internship in our team, to <a href="&#x6d;&#97;&#105;l&#x74;&#x6f;&#58;&#106;&#x75;&#x72;&#114;&#105;a&#x61;&#110;&#46;p&#x65;&#x72;&#115;&#121;&#x6e;&#x40;&#99;&#108;a&#x72;&#x61;&#98;&#114;&#x69;&#x64;&#103;&#101;&#x2e;&#x63;&#111;&#109;">contact us</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Tips For Distraction-Free Programming]]></title>
            <link href="/blog/2018/04/09/some-tips-for-distraction-free-programming"/>
            <updated>2018-04-09T17:00:00+00:00</updated>
            <id>/blog/2018/04/09/some-tips-for-distraction-free-programming</id>
            <content type="html"><![CDATA[<p>I'm very easily distracted. The slightest movement or conversation in the room takes my focus right away, not to mention the endless stream of information and notifications that e.g. services like Slack (team chat) and e-mail generate. I might be working on something with a colleague or on my own, when a simple notification pops in. My brain glitches for a moment while I process the notification and get back to where I was, but it's enough to completely lose focus. When pair programming with someone that isn't easily distracted, it's mostly fixed in an instant by getting back to the conversation or repeating the last question, but it's a lot more difficult when working on a feature alone. Over time I tried to change a few things to make this kind of interruptions less frequent or pervasive. Let's check some out:</p>

<h2 id="%F0%9F%8F%9D-environment">🏝 Environment</h2>

<p>The room I'm working in has a huge impact on my concentration levels. People talking or walking around are direct hits, as is any movement in my surroundings, even behind me. This is mostly fixed in our case since we don't have an open floor plan, so we don't share rooms with other teams, and when it's noisy in the room next to ours, we can just close the door. To prevent people talking from disrupting my concentration and the other way around, I'll put on headphones when working alone (mostly to prevent myself from listening in on the conversation), and I'll move to another room when pair programming. I know it sounds antisocial and makes me less approachable for questions or consultation, but I try to only do this when there's noise.</p>

<h2 id="%F0%9F%93%B1-phone-%26-social-media">📱 Phone &amp; Social Media</h2>

<p>My phone is out of sight. When I get a message I will read it when I find the time. When someone calls me I mostly take the call. It might sound strange because we're a social media company, but I'm not logged in to any of my personal social media accounts during the day. This really helps me concentrate, because my Twitter timeline is a real timesink for me. If I'm looking at that, I'm certainly not concentrating 😏. For testing stuff, I'll aways use test accounts.</p>

<h2 id="%F0%9F%96%A5-full-screen-applications">🖥 Full Screen Applications</h2>

<p>Although I don't like Full Screen Applications, I started using them more and more. They hide anything that might be happening in other windows, covering unwanted distractions up until you switch to the other application. I still don't like the oversight that is taken away by using an app in Full Screen mode though. The cool thing for me specifically is that iTerm behaves a bit like a tiling window manager for me, since I do most of my development in Vim &amp; the terminal, using iTerm splits. A great tip there is that you can use <code>Cmd + Shift + Enter</code> in an iTerm split to make it appear Full Screen temporarily.</p>

<h2 id="%F0%9F%9B%8E-osx-notification-center">🛎 OSX Notification center</h2>

<p><img src="/images/2018-04-09-some-tips-for-distraction-free-programming/1.png" alt="do not disturb" /></p>

<p>I already hinted at it earlier on, but notifications of any kind really disturb me. They pop over any fullscreen application that might be open, and I really can't help looking at them. This is why I set the <code>DO NOT DISTURB</code> mode on during workdays. You can configure Mac OSX to enable it by default during work hours, or you can do it manually when you notice being distracted. Notifications I get are mostly from Slack, Calendar and Mail. You can also configure this on a per-application basis in your System Preferences.</p>

<h2 id="%F0%9F%8E%88-osx-application-badges">🎈 OSX Application Badges</h2>

<p><img src="/images/2018-04-09-some-tips-for-distraction-free-programming/2.png" alt="dock icons with badges" /></p>

<p>What's really annoying me is that Mac OS displays so-called "badges" -the red circle icons with a number in them- on applications that received notifications, and these badges are visible in the Dock and the Application Switcher (<code>Cmd + Tab</code>). When I'm switching to my browser, I don't want to see how many Slack messages I missed. I'll check those later. I just went to Notification Center in System Preferences and disabled these badges for Slack, Calendar and Mail. I believe that I can be more productive when I read these things periodically instead of during other tasks. In the screenshot above, I enabled them temporarily for Calendar to show you what I mean, but what you can't see is that I have 25+ unread messages in Slack. Don't worry, I'll read them after I get this blogpost out! 😉</p>

<h2 id="%F0%9F%93%A2-slack">📢 Slack</h2>

<p>Some great things to do in Slack are to Leave channels you don't use, and to use the Mute 🔇 functionality on channels that are not urgent but you can't really leave. Of course, I disabled Slack's notification sounds by default.</p>

<p>I hope these tips were helpful, they certainly help me concentrate a bit better. If you think of anything else, comment below, I want to hear it! Happy pair programming!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Taking Care of Little Big Details on an Off-Site Bootcamp]]></title>
            <link href="/blog/2017/05/22/implementing-little-big-details-on-offsite-bootcamp"/>
            <updated>2017-05-22T10:00:00+00:00</updated>
            <id>/blog/2017/05/22/implementing-little-big-details-on-offsite-bootcamp</id>
            <content type="html"><![CDATA[<p>A few weeks ago, we went on a two-day off-site with the Clarabrige Engage development team for an event we dubbed "improvement bootcamp". It's the second time we did something like this and since it was fun and we got quite a lot of stuff done, we wanted to share our story. Maybe it could work for your team as well.</p>

<h2 id="the-problem-with-roadmaps">The problem with roadmaps</h2>

<p>The idea behind a bootcamp is "drop everything, let's work on something else, someplace else for a few days". For two days, we were hidden away in a beautiful house in the fields of Waasland where we focused solely on what we like to call "little big details".</p>

<p>Over the course of the 6+ years that our product has existed, we have built up a huge database of customer requests. Prioritization and implementation of those requests is a constant process; in fact, almost all of our roadmap is compromised of client-requested features. We take logging these requests very seriously. Feature requests come to us through our ideas forum (where clients can post &amp; up-vote ideas), via our Live Chat, and via our dedicated Customer Success team. All of this information (what is requested, who is requesting it, if it's technically possible/feasible, etc.) is then ranked by priority and, after being curated by the Product Team, makes up the roadmap.</p>

<p>That roadmap becomes our daily job, at least when we're not playing <a href="https://engagor.github.io/blog/2017/03/01/batman-chatman/">Batman</a>. We always have a detailed roadmap for the next release of our product (around three months), and a more general one for the upcoming 12 months. This balance works for us; we can commit certain projects to our customers, while on the longer term we can stay flexible, react quickly to changing customer demands, and implement new social functionality when it becomes available.</p>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/doing-all-at-once.gif" alt="When we try to do all at once" /><br />
<small>When we try to do all at once</small>
</center></p>

<p>But, as it often goes, projects aren't perfectly defined from the start (their scope often grows) and we developers tend to underestimate projects, so getting everything finished on-time sometimes (more often than we’d like) results in neglecting some of the details. Those are the details that make a product stress-free, or - why not - even fun to use.</p>

<p>The "improvement bootcamp" is our initiative to force ourselves to periodically step back and focus on these little big details.</p>

<h2 id="little-big-details">Little Big Details</h2>

<p>But what do we mean with “little big details”? It can be anything from natural sorting of elements in tables, consistent design of similar pages throughout the application, to friendlier wording of messages in the application.</p>

<p>Often, they're simple things. Often, they're not real “new” features. Often, you might not even know you were missing them.</p>

<p>Have you noticed how, when using Google Maps to get directions to another place, the walking man icon changes into a person with a backpack and walking sticks? Or how Spotify congratulates you on your good taste in music when you click 'Lyrics' on a song that Spotify doesn't have lyrics for?</p>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/google-maps.png" alt="Little big detail in Google Maps" /><br />
<small>Little big detail in Google Maps</small></center></p>

<p>It's stuff like this that makes good products even more enjoyable to use.</p>

<p>For our tool, a few of the candidates we selected for the bootcamp include:</p>

<ul>
<li>A more consistent loading/empty view of widgets around the different dashboards that Clarabrige Engage offers;</li>
<li>Requiring people to type the name of the topic they want to delete;</li>
<li>Remembering the text you typed in the reply bar, so that if it fails, users can easily try again;</li>
<li>Make the "click area" of widgets bigger when selecting widgets to add to a dashboard;</li>
</ul>

<p>None of these features will win awards, nor will they ever be on the top of most requested features lists; sometimes they're just small nuisances. But they do have an impact; it's details that make the difference between a good software product and one that's actually fun to use.</p>

<h2 id="the-action-plan">The action plan</h2>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/action-plan.png" alt="Spreadsheet with the action plan" /><br />
<small>Spreadsheet with the action plan</small></center></p>

<p>This was our action plan to get as much of this done, in a short timeframe, and have some fun while doing it:</p>

<ol>
<li>To start, we asked all members of the Clarabrige Engage team, from Sales to Marketing, to tag improvements in our Github repository that they thought would fit the goal.</li>
<li>These were scored on a few aspects:

<ol>
<li>Priority: Indicator of how aligned the idea is with our product vision.</li>
<li>Impact: How many customers are requesting it or would benefit from it?</li>
<li>Workload: How long would it take us to implement this? (If it's expected to take longer than 4 hours, it's probably not a good candidate.)</li>
<li>Coolness: Sometimes the really fun ideas need a little bump, don't they?</li>
</ol></li>
<li>The candidates were sorted according to the formula <code>(Impact * 1.5) + (Priority * 5) + (Workload * -2) + Coolness</code>. This would be the order in which we would tackle them.</li>
<li>The top 50 items in this priority list were discussed with everyone in the development team and assigned.</li>
<li>We started working on them on Wednesday morning with the goal of finishing work by Thursday evening.</li>
<li>During the coding, we kept track of our own and each other’s progress on a Github project board; indicating whenever a certain improvement was implemented, ready for review, reviewed, and ready for production.</li>
<li>On Thursday evening, we presented internally to the development team what everyone was able to accomplish.</li>
</ol>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/github-project-board.png" alt="Github Project Board" /><br />
<small>Github Project Board</small></center></p>

<h2 id="the-results">The results</h2>

<p>On Friday afternoon - our weekly beer-o'clock in the Gent office - we presented the results of the bootcamp to the whole Clarabrige Engage team. In total, we were able to get 42 things done. The list included a bunch of internal improvements - thus making our support ninjas happy - and it included some longstanding customer requests.</p>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/results-presentation-slide.png" alt="Slide from the presentation to the team" /><br />
<small>Slide from the presentation to the team</small></center></p>

<p>It did take a few more days to put everything from the bootcamp into production, because we still had to hand it over to QA, prepare any customer communication, and make sure the merges happened in a coordinated way.</p>

<p>If you would argue that details and fun stuff like this should be part of the standard product and development workflow, I totally agree. And while events like this might look like "patching", they actually contribute to installing that mindset by making everyone in the team aware of the importance of these.</p>

<p>A bootcamp like this has the pleasant side effect of actually proving what we as a team are able to accomplish in a short timeframe. That feeling of speed, and accompanying pride, is a bit harder to find when you're working on bigger, long-term projects that involve lots more nuts and bolts.
Working outside of your comfort zone, by working on features in the code base you haven't seen before, or more literally, by not sitting at your desk, increased team communication and trained new team members.</p>

<p>And of course, you get to learn new stuff about your colleagues after hours. Like how passionate Gheerwijn is about analog cameras.
And that's about all the info you’ll get, because: "what happens at the bootcamp, stays at the bootcamp". Let this vague Polaroid picture of the team be a little testament to that.</p>

<p><center><img src="/images/2017-05-22-march-2017-bootcamp/team-polaroid.png" alt="Team Picture" /></center></p>

<p>Want to join our next bootcamp? We’re always on the lookout for bright people to join the team. <a href="https://developers.engagor.com/team">Read about how it’s like to work in our team</a>.</p>
]]></content>
        </entry>
    </feed>